{"version":3,"sources":["webpack.config.js"],"names":[],"mappings":";;AAAA;;;AAGA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,oBAAoB,QAAQ,6BAAR,CAAxB;AACA,QAAQ,SAAR;;AAEA,OAAO,OAAP,GAAiB;AACb,aAAS,KAAK,IAAL,CAAU,SAAV,EAAoB,MAApB,CADI;AAEb,aAAS;AACL,4BAAoB,CAAC,cAAD,EAAiB,SAAjB,EAA4B,aAA5B,CADf;AAEL,oBAAY,CAAC,EAAD,EAAK,KAAL,EAAY,OAAZ;AAFP,KAFI;AAMb,WAAO,CAAC,kBAAD,EAAqB,wBAArB,CANM;AAOb,YAAQ;AACJ,cAAM,KAAK,IAAL,CAAU,SAAV,EAAoB,MAApB,CADF;AAEJ,oBAAY,QAFR;AAGJ,kBAAU,WAHN;AAIJ,2BAAmB;AAJf,KAPK;AAab,eAAW;AACP,qBAAa,GADN;AAEP,gBAAQ,IAFD;AAGP,eAAO;AAHA,KAbE;AAkBb,aAAS,oBAlBI;AAmBb,YAAQ;AACJ,iBAAS,CACL;AACI,kBAAM,OADV;AAEI,qBAAS,gBAFb;AAGI,oBAAQ,cAHZ;AAII,qBAAS,CAAC,QAAD,CAJb;AAKI,mBAAO;AACH,0BAAU,SADP;AAEH,6BAAa;AAFV;AALX,SADK,EAWL;AACI,kBAAM,SADV;AAEI,oBAAQ,kBAAkB,OAAlB,CAA0B,wEAA1B;AAFZ,SAXK;AADL,KAnBK;AAqCb,aAAS,CAAC,IAAI,iBAAJ,CAAsB,YAAtB,CAAD;AArCI,CAAjB","file":"webpack.config-compiled.js","sourcesContent":["/**\r\n * Created by tatsiana.dubrova on 17.08.2016.\r\n */\r\nvar path = require('path');\r\nvar webpack = require('webpack');\r\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\r\nrequire('core-js');\r\n\r\nmodule.exports = {\r\n    context: path.join(__dirname,'imdb'),\r\n    resolve: {\r\n        modulesDirectories: [\"node_modules\", \"scripts\", \"stylesheets\"],\r\n        extensions: [\"\", \".js\", \".scss\"]\r\n    },\r\n    entry: [\"./scripts/app.js\", \"./stylesheets/app.scss\"],\r\n    output: {\r\n        path: path.join(__dirname,'dist'),\r\n        publicPath: '/dist/',\r\n        filename: \"bundle.js\",\r\n        sourceMapFilename: \"[file].map\"\r\n    },\r\n    devServer: {\r\n        contentBase: \".\",\r\n        inline: true,\r\n        watch: true,\r\n    },\r\n    devtool: \"#inline-source-map\",\r\n    module: {\r\n        loaders: [\r\n            {\r\n                test: /\\.js$/,\r\n                exclude: /(node_modules)/,\r\n                loader: 'babel-loader',\r\n                presets: [\"es2015\"],\r\n                query: {\r\n                    optional: 'runtime',\r\n                    nonStandard: 'false',\r\n                },\r\n            },\r\n            {\r\n                test: /\\.scss$/,\r\n                loader: ExtractTextPlugin.extract('css-loader?sourceMap!sass-loader?sourceMap=true&sourceMapContents=true')\r\n            }\r\n        ]\r\n    },\r\n    plugins: [new ExtractTextPlugin('styles.css')]\r\n};"]}